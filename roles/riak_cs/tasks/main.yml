# Riak CS Object Storage - an S3-compatible object store
# https://registry.hub.docker.com/u/hectcastro/riak-cs/
#
# For testing, we use a cluster of size one.
#
# Port bindings:
# Riak HTTP API: 8098:8098
# Riak CS HTTP API: 8080:8080
#
# TODO: Use tagged image from private registry.
 - name: run Riak CS container
   docker: image={{ riak_cs_image }}
           ports="{{ advertise_ip }}:8098:8098,{{ advertise_ip }}:8080:8080"
           env="DOCKER_RIAK_CS_CLUSTER_SIZE=1,SERVICE_8080_NAME=riak-cs"
           name="riak-cs"
           publish_all_ports=True
           state=running
   register: riak_cs

 - name: copy riak-cs.service
   copy: >
     src=riak-cs.service
     dest=/usr/lib/systemd/system/riak-cs.service

 - name: enable and start riak-cs.service
   service: name=riak-cs
            enabled=yes
            state=started

 - name: extract Riak CS key
 # Because this key is generated shortly after the first time the service
 # is initialized, we need to retry until it is generated.
   shell: >
     /usr/local/bin/docker-enter riak-cs
     egrep "admin_key" /etc/riak-cs/app.config | cut -d '"' -f2
   register: riak_cs_key
   until: riak_cs_key.stdout.find("admin-key") == -1
   retries: 10
   changed_when: False

 - name: extract Riak CS secret
   shell: >
     /usr/local/bin/docker-enter riak-cs
     egrep "admin_secret" /etc/riak-cs/app.config | cut -d'"' -f2
   register: riak_cs_secret
   changed_when: False

 - name: set Riak CS key in Consul
   uri: url=http://consul.service.consul:8500/v1/kv/riak-cs/AWS_KEY
        method=PUT
        body="{{ riak_cs_key.stdout }}"

 - name: set Riak CS secret in Consul
   uri: url=http://consul.service.consul:8500/v1/kv/riak-cs/AWS_SECRET
        method=PUT
        body="{{ riak_cs_secret.stdout }}"
