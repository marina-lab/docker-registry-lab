# Registrator Docker-Consul bridge
# Automatically registers containers with published ports as Consul services.
 - name: pull Registrator image
   docker_pull:
     repo: "{{ registrator_image }}"

 - name: template registrator.service
   template:
     src: registrator.service
     dest: /usr/lib/systemd/system/registrator.service
   register: registrator_unit
   notify: restart registrator

 - name: systemctl daemon-reload
   command: /bin/systemctl daemon-reload
   when: registrator_unit.changed

 - name: enable and start registrator.service
   service:
     name: registrator
     enabled: yes
     state: started

 # Attempt consul dns lookup to avoid race conditions in later commands
 # - name: dig consul to ensure consul has started dns service
 #   command: dig +noall +nocomments +answer consul-http.service.consul A
 #   register: result
 #   until: result.stdout.find('consul-http.service.consul') != -1
 #   retries: 10
 #   delay: 1
 
# Docker services will now auto-register and are queryable
# *from inside the containers* with, eg:
# dig consul-http.service.consul. A
#
# or via HTTP:
# ETH1_IP=$(ip addr list eth1 | awk '/inet /{sub(/\/[0-9]+/,"",$2); print $2}')
# curl $ETH1_IP:8500/v1/agent/services | python -mjson.tool
