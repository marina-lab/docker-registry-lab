 - name: ensure sudoers.d is enabled
   lineinfile:
     dest: /etc/sudoers
     regexp: '^#includedir /etc/sudoers.d'
     line: '#includedir /etc/sudoers.d'
     state: present
     backup: yes
 
 - name: set up password-less sudo for admin users
   copy:
     content: '%{{ sudo_group }} ALL=(ALL) NOPASSWD:ALL'
     dest: /etc/sudoers.d/admin
     owner: root
     group: root
     mode: 0440
 
 - name: strict SSH access
   lineinfile:
     dest: /etc/ssh/sshd_config
     state: present
     regexp: '^#?{{ item.key }}'
     line: "{{ item.key }} {{ item.value }}"
     validate: '/usr/sbin/sshd -t -f %s'
   with_items:
     - { key: 'PermitRootLogin',        value: 'no'}
     - { key: 'PasswordAuthentication', value: 'no'}
     - { key: 'AllowGroups',            value: "sshusers"}
     - { key: 'MaxAuthTries',           value: "5"}
     - { key: 'LoginGraceTime',         value: "60"}
     - { key: 'MaxSessions',            value: "5"}
     - { key: 'MaxStartups',            value: "10:30:60"}
     - { key: 'UseDNS',                 value: "no"}
   register: sshd
 
 - name: restart sshd as soon as changes are made
   service:
     name: sshd
     state: restarted
   when: sshd.changed
   ignore_errors: true

 - name: install iptables-services
   yum:
     name: iptables-services
     state: installed
 
 # Docker does iptables configuration for containers, and firewalld
 # cannot be made aware of them, so we need to use iptables service instead.
 # firewalld will overwrite any rules created by Docker!
 - name: disable firewalld
   service:
     name: firewalld
     enabled: no
     state: stopped

 - name: enable iptables and ip6tables
   service:
     name: "{{ item }}"
     enabled: yes
     state: started
   with_items:
     - iptables
     - ip6tables

 - name: template iptables startup rules
   template:
     src: iptables
     dest: /etc/sysconfig/iptables
