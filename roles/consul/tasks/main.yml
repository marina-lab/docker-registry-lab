# Consul Service Registration
# Used as a multi-host service registry.
# HTTP API is available over 8500.
#
# We bind port 53 of the container to port 53 of the docker0 bridge adapter,
# enabling Consul to serve as the DNS for containers.
#
# All other ports are bound to the "advertise_ip". If this is a publicly
# exposed IP, you need to whitelist your other hosts with firewall rules
# and encrypt your traffic!
#
# Requires the docker daemon to be run with:
# --dns 172.17.42.1 --dns 8.8.8.8 --dns-search service.consul
#
# Port bindings:
# DNS server: 172.17.42.1:53:53 and localhost:53:53
# HTTP API: 8500:8500
# RPC endpoint: 8400:8400
# Serf LAN port: 8301:8301
# Serf WAN port: 8302:8302
# Server RPC address: 8300:8300
 - name: create data directory for consul
   file: path={{ item }}
         state=directory
   with_items:
     - /var/docker_volumes/consul/consul.d
     - /var/docker_volumes/consul/data

 - name: run Consul container
   docker: image="progrium/consul"
     ports="{{ advertise_ip }}:8300:8300,{{ advertise_ip }}:8301:8301,{{advertise_ip}}:8301:8301/udp,{{ advertise_ip }}:8302:8302,{{ advertise_ip }}:8302:8302/udp,{{ advertise_ip }}:8400:8400,{{ advertise_ip }}:8500:8500,172.17.42.1:53:53/udp"
           name="consul"
           hostname="{{ ansible_hostname }}"
           command="-server -advertise {{ advertise_ip }} -bootstrap -data-dir /data -config-dir /etc/consul.d"
           volumes="/var/docker_volumes/consul/consul.d:/etc/consul.d,/var/docker_volumes/consul/data:/data"
           state=running

 - name: use consul as local dns resolver (template resolv.conf)
   template: src=resolv.conf
             dest=/etc/resolv.conf
